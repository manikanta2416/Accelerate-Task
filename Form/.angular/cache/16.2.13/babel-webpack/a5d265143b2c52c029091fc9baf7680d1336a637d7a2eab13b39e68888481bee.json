{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RegisterService {\n  constructor(http) {\n    this.http = http;\n  }\n  Regsiter(data) {\n    return this.http.post(`https://localhost:44382/api/Register/addRequest`, data);\n  }\n  ViewRequest() {\n    return this.http.get(`https://localhost:44382/api/Register/getRequest`);\n  }\n  static #_ = this.ɵfac = function RegisterService_Factory(t) {\n    return new (t || RegisterService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RegisterService,\n    factory: RegisterService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["RegisterService","constructor","http","Regsiter","data","post","ViewRequest","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\18981\\source\\repos\\Form_solution\\Form\\src\\app\\register.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { IRegisterUser } from './Interface/RegisterInterface';\r\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  constructor(private http: HttpClient) { }\n  Regsiter(data: any): Observable<boolean> {\n    return this.http.post<boolean>(`https://localhost:44382/api/Register/addRequest`, data);\r\n  }\n  ViewRequest(): Observable<IRegisterUser[]> {\n    return this.http.get<IRegisterUser[]>(`https://localhost:44382/api/Register/getRequest`);\r\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAE1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EACxCC,QAAQA,CAACC,IAAS;IAChB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAU,iDAAiD,EAAED,IAAI,CAAC;EACzF;EACAE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAkB,iDAAiD,CAAC;EAC1F;EAAC,QAAAC,CAAA,G;qBARUR,eAAe,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfb,eAAe;IAAAc,OAAA,EAAfd,eAAe,CAAAe,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}